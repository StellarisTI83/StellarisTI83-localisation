; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MAIN.C"
	.assume ADL=1
	SEGMENT DATA
_lc_charger:
	DW24	0
_lc_nouvelle_partie:
	DW24	0
_lc_options:
	DW24	0
_lc_quitter:
	DW24	0
_lc_sauvegarder:
	DW24	0
_lc_retour:
	DW24	0
_lc_create_galaxie:
	DW24	0
	SEGMENT BSS
_localeLanguage:
	DS	1
_languageVar:
	DS	1
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	
;   10	#include <debug.h>
;   11	#include <math.h>
;   12	#include "main.h"
;   13	#include "locale/lcFR.h"
;   14	#include "locale/lcEN.h"
;   15	#include <fileioc.h>
;   16	#include <graphx.h>
;   17	
;   18	char* lc_charger = NULL;
;   19	char* lc_nouvelle_partie = NULL;
;   20	char* lc_options = NULL;
;   21	char* lc_quitter = NULL;
;   22	char* lc_sauvegarder = NULL;
;   23	char* lc_retour = NULL;
;   24	char* lc_create_galaxie = NULL;
;   25	
;   26	char localeLanguage;
;   27	ti_var_t languageVar;
	SEGMENT CODE
;   28	
;   29	int main(void)
;   30	{
_main:
	LD	HL,-16
	CALL	__frameset
;   31		char header = 0;
	LD	(IX+-4),0
;   32		int numeroString = 1;
;   33		char chaineTemporaire[100];
;   34		int fin = 1, finBoucle = 1;
	LD	BC,1
	LD	(IX+-10),BC
	LD	(IX+-13),BC
;   35		int footer = -1, taille = 0;
	LD	BC,16777215
	LD	(IX+-16),BC
	LD	BC,0
	LD	(IX+-3),BC
;   36		ti_CloseAll();
	CALL	_ti_CloseAll
;   37		localeLanguage = LC_FR;
	LD	A,1
	LD	(_localeLanguage),A
;   38		gfx_Begin();
	CALL	_gfx_Begin
;   39		gfx_SetTextXY(50, 50);
	LD	BC,50
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   40		gfx_PrintString("1");
	LD	BC,L__0
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   41		while(finBoucle){
	JR	L_16
L_17:
;   42			switch(localeLanguage){
	LD	A,(_localeLanguage)
	LD	B,A
	SEXT	HL
	LD	L,B
	CALL	__case8
L__1:
	DW	2
	DB	1
	DW24	L_0	

	DB	2
	DW24	L_1	

	DW24	L_2	

;   43				case LC_FR:
L_0:
;   44					ti_CloseAll();
	CALL	_ti_CloseAll
;   45					languageVar = ti_Open("lcFR","w+");
	LD	BC,L__2
	PUSH	BC
	LD	BC,L__3
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
;   46					ti_Rewind(languageVar);
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	(_languageVar),A
	CALL	_ti_Rewind
	POP	BC
;   47					header = LC_FR;
	LD	(IX+-4),1
;   48					loadFR();
	CALL	_loadFR
;   49					break;
	JR	L_2
;   50				case LC_EN:
L_1:
;   51					ti_SetArchiveStatus(true, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	CALL	_ti_SetArchiveStatus
	POP	BC
	POP	BC
;   52					ti_CloseAll();
	CALL	_ti_CloseAll
;   53					languageVar = ti_Open("lcEN","w+");
	LD	BC,L__4
	PUSH	BC
	LD	BC,L__5
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
;   54					ti_Rewind(languageVar);
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	(_languageVar),A
	CALL	_ti_Rewind
	POP	BC
;   55					header = LC_EN;
	LD	(IX+-4),2
;   56					loadEN();
	CALL	_loadEN
;   57					finBoucle = 0;
	LD	BC,0
	LD	(IX+-13),BC
;   58					break;
;   59			}
L_2:
;   60			ti_Write(&header, sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	PUSH	BC
	PEA	IX+-4
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   61	
;   62			gfx_PrintString("2");
	LD	BC,L__6
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   63			numeroString = LC_CHARGER;
	LD	BC,1
	LD	(IX+-7),BC
;   64			while(fin == 1){
	JR	L_12
L_13:
;   65				switch(numeroString){
	LD	HL,(IX+-7)
	CALL	__seqcase
L__7:
	DW	7
	DW	1
	DB	0
	DW24	L_3	

	DW24	L_4	

	DW24	L_5	

	DW24	L_6	

	DW24	L_7	

	DW24	L_8	

	DW24	L_9	

	DW24	L_11	

;   66					case LC_CHARGER:
L_3:
;   67						taille = strlen(lc_charger) + 1;
	LD	BC,(_lc_charger)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   68						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   69						ti_Write(lc_charger, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_charger)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   70						break;
	JR	L_11
;   71					case LC_NOUVELLE_PARTIE:
L_4:
;   72						taille = strlen(lc_nouvelle_partie) + 1;
	LD	BC,(_lc_nouvelle_partie)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   73						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   74						ti_Write(lc_nouvelle_partie, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_nouvelle_partie)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   75						break;
	JR	L_11
;   76					case LC_OPTIONS:
L_5:
;   77						taille = strlen(lc_options) + 1;
	LD	BC,(_lc_options)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   78						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   79						ti_Write(lc_options, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_options)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   80						break;
	JR	L_11
;   81					case LC_QUITTER:
L_6:
;   82						taille = strlen(lc_quitter) + 1;
	LD	BC,(_lc_quitter)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   83						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   84						ti_Write(lc_quitter, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_quitter)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   85						break;
	JR	L_11
;   86					case LC_SAUVEGARDER:
L_7:
;   87						taille = strlen(lc_sauvegarder) + 1;
	LD	BC,(_lc_sauvegarder)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   88						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   89						ti_Write(lc_sauvegarder, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_sauvegarder)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   90						break;
	JR	L_11
;   91					case LC_RETOUR:
L_8:
;   92						taille = strlen(lc_retour) + 1;
	LD	BC,(_lc_retour)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   93						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   94						ti_Write(lc_retour, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_retour)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   95						break;
	JR	L_11
;   96					case LC_CREATE_GALAXIE:
L_9:
;   97						taille = strlen(lc_create_galaxie) + 1;
	LD	BC,(_lc_create_galaxie)
	PUSH	BC
	CALL	_strlen
	POP	BC
	INC	HL
	LD	(IX+-3),HL
;   98						ti_Write(&taille, sizeof(int), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,3
	PUSH	BC
	PEA	IX+-3
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   99						ti_Write(lc_create_galaxie, taille * sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,(_lc_create_galaxie)
	PUSH	BC
	CALL	_ti_Write
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  100						fin = 0;
	LD	BC,0
	LD	(IX+-10),BC
;  101						break;
;  102				}
L_11:
;  103				numeroString++;
	LD	BC,(IX+-7)
	INC	BC
	LD	(IX+-7),BC
;  104			}
L_12:
	LD	BC,1
	LD	HL,(IX+-10)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_13
;  105			gfx_PrintString("3");
	LD	BC,L__9
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;  106			ti_Write(&footer, sizeof(char), 1, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	PUSH	BC
	PEA	IX+-16
	CALL	_ti_Write
;  107			localeLanguage++;
	LD	A,(_localeLanguage)
	INC	A
	LD	(_localeLanguage),A
;  108			fin = 1;
	LD	DE,1
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-10),DE
;  109		}
L_16:
	LD	HL,(IX+-13)
	CALL	__icmpzero
	JR	NZ,L_17
;  110		while (!os_GetCSC());
L_19:
	CALL	_os_GetCSC
	OR	A,A
	JR	Z,L_19
;  111		ti_SetArchiveStatus(true, languageVar);
	LD	A,(_languageVar)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,1
	PUSH	BC
	CALL	_ti_SetArchiveStatus
	POP	BC
	POP	BC
;  112		ti_CloseAll();
	CALL	_ti_CloseAll
;  113		gfx_End();
	CALL	_gfx_End
	OR	A,A
;  114	    return 0;
	SBC	HL,HL
;  115	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_lc_create_galaxie                  STATIC      3   variable
;_lc_retour                          STATIC      3   variable
;_lc_sauvegarder                     STATIC      3   variable
;_lc_quitter                         STATIC      3   variable
;_lc_options                         STATIC      3   variable
;_lc_nouvelle_partie                 STATIC      3   variable
;_lc_charger                         STATIC      3   variable
;_strlen                             IMPORT  -----   function
;_ti_Write                           IMPORT  -----   function
;_loadEN                             IMPORT  -----   function
;_ti_SetArchiveStatus                IMPORT  -----   function
;_loadFR                             IMPORT  -----   function
;_ti_Rewind                          IMPORT  -----   function
;_languageVar                        STATIC      1   variable
;_ti_Open                            IMPORT  -----   function
;_gfx_PrintString                    IMPORT  -----   function
;_gfx_SetTextXY                      IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_localeLanguage                     STATIC      1   variable
;_ti_CloseAll                        IMPORT  -----   function
;footer                               IX-16      3   variable
;finBoucle                            IX-13      3   variable
;fin                                  IX-10      3   variable
;numeroString                          IX-7      3   variable
;header                                IX-4      1   variable
;taille                                IX-3      3   variable


; Stack Frame Size: 22 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__0:
	DB	"1"
	DB	0
L__2:
	DB	"w+"
	DB	0
L__3:
	DB	"lcFR"
	DB	0
L__4:
	DB	"w+"
	DB	0
L__5:
	DB	"lcEN"
	DB	0
L__6:
	DB	"2"
	DB	0
L__9:
	DB	"3"
	DB	0
	XREF _gfx_SetTextXY:ROM
	XREF _gfx_PrintString:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _loadEN:ROM
	XREF _loadFR:ROM
	XREF _strlen:ROM
	XREF _ti_SetArchiveStatus:ROM
	XREF _ti_Rewind:ROM
	XREF _ti_Write:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF _os_GetCSC:ROM
	XREF __frameset:ROM
	XREF __icmpzero:ROM
	XREF __case8:ROM
	XREF __seqcase:ROM
	XDEF _main
	XDEF _languageVar
	XDEF _localeLanguage
	XDEF _lc_create_galaxie
	XDEF _lc_retour
	XDEF _lc_sauvegarder
	XDEF _lc_quitter
	XDEF _lc_options
	XDEF _lc_nouvelle_partie
	XDEF _lc_charger
	END
